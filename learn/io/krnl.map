
分配公共符号
公共符号            大小              文件

idt_ptr             0x6               kernel/global.o
task_stack          0x20000           kernel/global.o
k_reenter           0x4               kernel/global.o
gdt                 0x400             kernel/global.o
tty_table           0xc30             kernel/global.o
tss                 0x68              kernel/global.o
nr_current_console  0x4               kernel/global.o
disp_pos            0x4               kernel/global.o
gdt_ptr             0x6               kernel/global.o
idt                 0x800             kernel/global.o
ticks               0x4               kernel/global.o
console_table       0x30              kernel/global.o
irq_table           0x40              kernel/global.o
p_proc_ready        0x4               kernel/global.o
proc_table          0x260             kernel/global.o

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/systask.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/assert.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/klib.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x30400
LOAD kernel/kernel.o
LOAD kernel/start.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/main.o
LOAD kernel/clock.o
LOAD kernel/proc.o
LOAD kernel/syscall.o
LOAD kernel/keyboard.o
LOAD kernel/tty.o
LOAD kernel/console.o
LOAD kernel/printf.o
LOAD kernel/vsprintf.o
LOAD kernel/systask.o
LOAD lib/assert.o
LOAD lib/klib.o
LOAD lib/kliba.o
LOAD lib/string.o
                [!provide]                        PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel/kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x00000000080480a0        0x0 kernel/kernel.o

.plt.got
 *(.plt.got)

.text           0x0000000000030400     0x36d8
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000030400      0x307 kernel/kernel.o
                0x0000000000030400                _start
                0x0000000000030440                hwint00
                0x0000000000030461                hwint01
                0x0000000000030490                hwint02
                0x00000000000304c0                hwint03
                0x00000000000304f0                hwint04
                0x0000000000030520                hwint05
                0x0000000000030550                hwint06
                0x0000000000030580                hwint07
                0x00000000000305b0                hwint08
                0x00000000000305c0                hwint09
                0x00000000000305d0                hwint10
                0x00000000000305e0                hwint11
                0x00000000000305f0                hwint12
                0x0000000000030600                hwint13
                0x0000000000030610                hwint14
                0x0000000000030620                hwint15
                0x000000000003062b                divide_error
                0x0000000000030631                single_step_exception
                0x0000000000030637                nmi
                0x000000000003063d                breakpoint_exception
                0x0000000000030643                overflow
                0x0000000000030649                bounds_check
                0x000000000003064f                inval_opcode
                0x0000000000030655                copr_not_available
                0x000000000003065b                double_fault
                0x000000000003065f                copr_seg_overrun
                0x0000000000030665                inval_tss
                0x0000000000030669                segment_not_present
                0x000000000003066d                stack_exception
                0x0000000000030671                general_protection
                0x0000000000030675                page_fault
                0x0000000000030679                copr_error
                0x0000000000030688                restart
                0x00000000000306e7                sys_call
 .text          0x0000000000030707       0x95 kernel/start.o
                0x0000000000030707                cstart
 .text          0x000000000003079c      0x157 kernel/i8259.o
                0x000000000003079c                init_8259A
                0x0000000000030898                put_irq_handler
                0x00000000000308bc                spurious_irq
 .text          0x00000000000308f3        0x0 kernel/global.o
 .text          0x00000000000308f3      0x607 kernel/protect.o
                0x00000000000308f3                init_prot
                0x0000000000030c9f                seg2phys
                0x0000000000030dcc                exception_handler
 .text          0x0000000000030efa      0x320 kernel/main.o
                0x0000000000030efa                testA
                0x0000000000030f2f                testB
                0x0000000000030f57                get_ticks
                0x0000000000030f8b                kernel_main
 .text          0x000000000003121a       0xd5 kernel/clock.o
                0x000000000003121a                clock_handler
                0x000000000003125d                milli_delay
                0x0000000000031297                init_clock
 .text          0x00000000000312ef     0x10d6 kernel/proc.o
                0x00000000000312ef                schedule
                0x000000000003137d                ldt_seg_linear
                0x00000000000313c7                va2la
                0x0000000000031425                send_recv
                0x00000000000314d8                sys_sendrec
                0x0000000000032243                reset_msg
 *fill*         0x00000000000323c5        0xb 
 .text          0x00000000000323d0       0x20 kernel/syscall.o
                0x00000000000323d0                sendrec
                0x00000000000323e4                printx
 .text          0x00000000000323f0      0x68a kernel/keyboard.o
                0x00000000000323f0                keyboard_handler
                0x0000000000032450                init_keyboard
                0x00000000000324f0                keyboard_read
 .text          0x0000000000032a7a      0x56e kernel/tty.o
                0x0000000000032a7a                task_tty
                0x0000000000032c05                in_process
                0x0000000000032dee                tty_write
                0x0000000000032e34                sys_printx
 .text          0x0000000000032fe8      0x417 kernel/console.o
                0x0000000000032fe8                is_current_console
                0x0000000000033003                out_char
                0x000000000003316e                set_cursor
                0x00000000000331d6                select_console
                0x000000000003328f                init_screen
                0x000000000003337f                scroll_screen
 .text          0x00000000000333ff       0x50 kernel/printf.o
                0x00000000000333ff                printf
 .text          0x000000000003344f      0x304 kernel/vsprintf.o
                0x00000000000334ad                vsprintf
                0x000000000003372d                sprintf
 .text          0x0000000000033753       0x58 kernel/systask.o
                0x0000000000033753                task_sys
 .text          0x00000000000337ab       0x9d lib/assert.o
                0x00000000000337ab                spin
                0x00000000000337c6                assertion_failure
                0x00000000000337ff                panic
 .text          0x0000000000033848      0x120 lib/klib.o
                0x0000000000033848                itoa
                0x00000000000338fa                disp_int
                0x0000000000033921                delay
 *fill*         0x0000000000033968        0x8 
 .text          0x0000000000033970       0xea lib/kliba.o
                0x0000000000033970                disp_str
                0x00000000000339ae                disp_color_str
                0x00000000000339ed                out_byte
                0x00000000000339f8                in_byte
                0x0000000000033a02                disable_irq
                0x0000000000033a37                enable_irq
                0x0000000000033a56                disable_int
                0x0000000000033a58                enable_int
 *fill*         0x0000000000033a5a        0x6 
 .text          0x0000000000033a60       0x78 lib/string.o
                0x0000000000033a60                memcpy
                0x0000000000033a89                memset
                0x0000000000033aaa                strcpy
                0x0000000000033ac2                strlen
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x0000000000033ae0      0x96b
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000033ae0       0x56 kernel/start.o
 .rodata        0x0000000000033b36       0x11 kernel/i8259.o
 *fill*         0x0000000000033b47       0x19 
 .rodata        0x0000000000033b60      0x290 kernel/protect.o
 .rodata        0x0000000000033df0       0x48 kernel/main.o
 .rodata        0x0000000000033e38      0x499 kernel/proc.o
 *fill*         0x00000000000342d1        0x3 
 .rodata        0x00000000000342d4       0x64 kernel/keyboard.o
 .rodata        0x0000000000034338       0x90 kernel/tty.o
 .rodata        0x00000000000343c8       0x11 kernel/systask.o
 *fill*         0x00000000000343d9        0x3 
 .rodata        0x00000000000343dc       0x6f lib/assert.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x000000000003444c      0x7b8
 *(.eh_frame)
 .eh_frame      0x000000000003444c       0x38 kernel/start.o
 .eh_frame      0x0000000000034484       0x60 kernel/i8259.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x00000000000344e4       0xb0 kernel/protect.o
                                         0xc8 (松开之前的大小)
 .eh_frame      0x0000000000034594       0x74 kernel/main.o
                                         0x8c (松开之前的大小)
 .eh_frame      0x0000000000034608       0x60 kernel/clock.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000034668      0x168 kernel/proc.o
                                        0x180 (松开之前的大小)
 .eh_frame      0x00000000000347d0       0xe0 kernel/keyboard.o
                                         0xf8 (松开之前的大小)
 .eh_frame      0x00000000000348b0       0xfc kernel/tty.o
                                        0x114 (松开之前的大小)
 .eh_frame      0x00000000000349ac      0x100 kernel/console.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x0000000000034aac       0x20 kernel/printf.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x0000000000034acc       0x60 kernel/vsprintf.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000034b2c       0x1c kernel/systask.o
                                         0x34 (松开之前的大小)
 .eh_frame      0x0000000000034b48       0x5c lib/assert.o
                                         0x74 (松开之前的大小)
 .eh_frame      0x0000000000034ba4       0x60 lib/klib.o
                                         0x78 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000035000                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000035000        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000035000        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000035000        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000035000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000035000        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000035000        0x0 kernel/kernel.o

.data           0x0000000000035000      0x6e0
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000035000        0x2 kernel/kernel.o
 .data          0x0000000000035002        0x0 kernel/start.o
 .data          0x0000000000035002        0x0 kernel/i8259.o
 *fill*         0x0000000000035002       0x1e 
 .data          0x0000000000035020       0xb8 kernel/global.o
                0x0000000000035020                task_table
                0x0000000000035080                user_proc_table
                0x00000000000350d0                sys_call_table
 .data          0x00000000000350d8        0x0 kernel/protect.o
 .data          0x00000000000350d8        0x0 kernel/main.o
 .data          0x00000000000350d8        0x0 kernel/clock.o
 .data          0x00000000000350d8        0x0 kernel/proc.o
 *fill*         0x00000000000350d8        0x8 
 .data          0x00000000000350e0      0x600 kernel/keyboard.o
                0x00000000000350e0                keymap
 .data          0x00000000000356e0        0x0 kernel/tty.o
 .data          0x00000000000356e0        0x0 kernel/console.o
 .data          0x00000000000356e0        0x0 kernel/printf.o
 .data          0x00000000000356e0        0x0 kernel/vsprintf.o
 .data          0x00000000000356e0        0x0 kernel/systask.o
 .data          0x00000000000356e0        0x0 lib/assert.o
 .data          0x00000000000356e0        0x0 lib/klib.o

.data1
 *(.data1)
                0x00000000000356e0                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x00000000000356e0                . = .
                0x00000000000356e0                __bss_start = .

.bss            0x00000000000356e0    0x22480
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000000356e0      0x800 kernel/kernel.o
 .bss           0x0000000000035ee0        0x0 kernel/start.o
 .bss           0x0000000000035ee0        0x0 kernel/i8259.o
 .bss           0x0000000000035ee0        0x0 kernel/global.o
 .bss           0x0000000000035ee0        0x0 kernel/protect.o
 .bss           0x0000000000035ee0        0x0 kernel/main.o
 .bss           0x0000000000035ee0        0x0 kernel/clock.o
 .bss           0x0000000000035ee0        0x0 kernel/proc.o
 .bss           0x0000000000035ee0       0x58 kernel/keyboard.o
 .bss           0x0000000000035f38        0x0 kernel/tty.o
 .bss           0x0000000000035f38        0x0 kernel/console.o
 .bss           0x0000000000035f38        0x0 kernel/printf.o
 .bss           0x0000000000035f38        0x0 kernel/vsprintf.o
 .bss           0x0000000000035f38        0x0 kernel/systask.o
 .bss           0x0000000000035f38        0x0 lib/assert.o
 .bss           0x0000000000035f38        0x0 lib/klib.o
 *(COMMON)
 *fill*         0x0000000000035f38        0x8 
 COMMON         0x0000000000035f40    0x21c20 kernel/global.o
                0x0000000000035f40                idt_ptr
                0x0000000000035f60                task_stack
                0x0000000000055f60                k_reenter
                0x0000000000055f80                gdt
                0x0000000000056380                tty_table
                0x0000000000056fc0                tss
                0x0000000000057028                nr_current_console
                0x000000000005702c                disp_pos
                0x0000000000057030                gdt_ptr
                0x0000000000057040                idt
                0x0000000000057840                ticks
                0x0000000000057860                console_table
                0x00000000000578a0                irq_table
                0x00000000000578e0                p_proc_ready
                0x0000000000057900                proc_table
                0x0000000000057b60                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000057b60                . = ALIGN (0x4)
                0x0000000000057b60                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000057b60                . = ALIGN (0x4)
                0x0000000000057b60                _end = .
                [!provide]                        PROVIDE (end, .)
                0x0000000000057b60                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x34
 *(.comment)
 .comment       0x0000000000000000       0x34 kernel/start.o
                                         0x35 (松开之前的大小)
 .comment       0x0000000000000034       0x35 kernel/i8259.o
 .comment       0x0000000000000034       0x35 kernel/global.o
 .comment       0x0000000000000034       0x35 kernel/protect.o
 .comment       0x0000000000000034       0x35 kernel/main.o
 .comment       0x0000000000000034       0x35 kernel/clock.o
 .comment       0x0000000000000034       0x35 kernel/proc.o
 .comment       0x0000000000000034       0x35 kernel/keyboard.o
 .comment       0x0000000000000034       0x35 kernel/tty.o
 .comment       0x0000000000000034       0x35 kernel/console.o
 .comment       0x0000000000000034       0x35 kernel/printf.o
 .comment       0x0000000000000034       0x35 kernel/vsprintf.o
 .comment       0x0000000000000034       0x35 kernel/systask.o
 .comment       0x0000000000000034       0x35 lib/assert.o
 .comment       0x0000000000000034       0x35 lib/klib.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
